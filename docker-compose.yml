version: '3.8'
services:
  nginx:
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: brit
      POSTGRES_PASSWORD: brit
      POSTGRES_DB: brit
      POSTGRES_TEST_DB: brit_test
    ports:
      - '35432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data:cached
      - ../docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics_dev"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      DATABASE_URL: 'postgresql://brit:brit@postgres:5432/brit'
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
      - NODE_ENV=development


volumes:
  db-data:
